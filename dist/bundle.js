!function(e){var t={};function r(o){if(t[o])return t[o].exports;var n=t[o]={i:o,l:!1,exports:{}};return e[o].call(n.exports,n,n.exports,r),n.l=!0,n.exports}r.m=e,r.c=t,r.d=function(e,t,o){r.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:o})},r.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},r.t=function(e,t){if(1&t&&(e=r(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var o=Object.create(null);if(r.r(o),Object.defineProperty(o,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var n in e)r.d(o,n,function(t){return e[t]}.bind(null,n));return o},r.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return r.d(t,"a",t),t},r.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},r.p="./public",r(r.s=3)}([function(e,t){e.exports=require("express")},function(e,t,r){const o=r(2);let n=new(0,o.Schema)({text:{type:String,required:!0},date:{type:Date,default:Date.now},isCompleted:{type:Boolean,default:!1}}),s=o.model("todo",n);e.exports=s},function(e,t){e.exports=require("mongoose")},function(e,t,r){e.exports=r(4)},function(e,t,r){const o=r(0),n=r(2),s=o(),a=r(5),i=r(6),d=r(7),u=r(1),p=process.env.MONGO_ATLAS_URL||r(8),l=process.env.PORT||8e3;r(9);s.use(o.urlencoded({extended:!0})),s.use(o.static("/public")),s.set("views","views"),s.set("view engine","ejs"),s.use(a),s.use(i),s.use(d),s.get("/",async(e,t)=>{let r=[],o=e.query.page;(!o||o<=0)&&(o=1);let n=e.query.sort;n||(n=1),-1!=n&&1!=n&&(n=1),r=await u.find({}).sort({date:n}).skip(9*o-9).limit(9).select({text:1,date:1,isCompleted:1}),t.render("index",{title:"Att göra",array:r,queries:{sort:n,page:o}})}),s.get("/about/:sort/:page",(e,t)=>{let r=e.params.sort,o=e.params.page;t.render("about",{title:"About",queries:{sort:r,page:o}})}),s.post("/",async(e,t)=>{let r=e.body.todo,o=e.query.sort,n=e.query.page,s=new u({text:r});await s.save((e,r)=>{e?t.send(e._message):t.redirect("/?sort="+o+"&page="+n)})}),n.connect(p,{useNewUrlParser:!0,useUnifiedTopology:!0}).then(()=>{s.listen(l)}).catch(e=>{console.log(e)}),e.exports=s},function(e,t,r){const o=r(0),n=r(1),s=o.Router();s.get("/edit/:sort/:page/:id",async(e,t)=>{let r=await n.findOne({_id:e.params.id}).select({text:1})||null;t.render("edit",{title:"Redigera",text:r})}),s.post("/edit/:sort/:page/:id",async(e,t)=>{let r=e.params.id,o=e.body.todo,s=e.params.sort,a=e.params.page;await n.updateOne({_id:r},{$set:{text:o}},{runValidators:!0},(e,r)=>{e?t.send(e._message):t.redirect("/?sort="+s+"&page="+a)})}),e.exports=s},function(e,t,r){const o=r(0),n=r(1),s=o.Router();s.get("/delete/:sort/:page/:id",async(e,t)=>{await n.deleteOne({_id:{$eq:e.params.id}});let r=e.params.sort,o=e.params.page;t.redirect("/?sort="+r+"&page="+o)}),e.exports=s},function(e,t,r){const o=r(0),n=r(1),s=o.Router();s.get("/complete/:sort/:page/:id",async(e,t)=>{let r=e.params.id,o=e.params.sort,s=e.params.page;(await n.findOne({_id:r}).select({isCompleted:1})).isCompleted?await n.updateOne({_id:r},{$set:{isCompleted:!1}}):await n.updateOne({_id:r},{$set:{isCompleted:!0}}),await t.redirect("/?sort="+o+"&page="+s)}),e.exports=s},function(e,t){e.exports="mongodb+srv://Marcus:Etthemligtadminlösenord1337@cluster0-j6ihm.mongodb.net/todo?retryWrites=true&w=majority"},function(e,t){e.exports=require("path")}]);